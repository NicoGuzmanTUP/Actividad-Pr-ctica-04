// <auto-generated />
using System;
using GestionTurnosPeluqueria.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GestionTurnosPeluqueria.Migrations
{
    [DbContext(typeof(ServicioDbContext))]
    [Migration("20240927142407_NombreDeLaMigracion")]
    partial class NombreDeLaMigracion
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GestionTurnosPeluqueria.Models.DetalleTurno", b =>
                {
                    b.Property<int>("DetalleTurnoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DetalleTurnoId"));

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ServicioId")
                        .HasColumnType("int");

                    b.Property<int>("TurnoId")
                        .HasColumnType("int");

                    b.HasKey("DetalleTurnoId");

                    b.HasIndex("ServicioId")
                        .IsUnique();

                    b.HasIndex("TurnoId");

                    b.ToTable("detalles");
                });

            modelBuilder.Entity("GestionTurnosPeluqueria.Models.Servicio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Costo")
                        .HasColumnType("float");

                    b.Property<bool>("EnPromocion")
                        .HasColumnType("bit");

                    b.Property<string>("ServicioName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("servicios");
                });

            modelBuilder.Entity("GestionTurnosPeluqueria.Models.Turno", b =>
                {
                    b.Property<int>("TurnoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TurnoId"));

                    b.Property<string>("Cliente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("Hora")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TurnoId");

                    b.ToTable("turnos");
                });

            modelBuilder.Entity("GestionTurnosPeluqueria.Models.DetalleTurno", b =>
                {
                    b.HasOne("GestionTurnosPeluqueria.Models.Servicio", "Servicio")
                        .WithOne("DetalleTurno")
                        .HasForeignKey("GestionTurnosPeluqueria.Models.DetalleTurno", "ServicioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestionTurnosPeluqueria.Models.Turno", "Turno")
                        .WithMany("DetallesTurno")
                        .HasForeignKey("TurnoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Servicio");

                    b.Navigation("Turno");
                });

            modelBuilder.Entity("GestionTurnosPeluqueria.Models.Servicio", b =>
                {
                    b.Navigation("DetalleTurno");
                });

            modelBuilder.Entity("GestionTurnosPeluqueria.Models.Turno", b =>
                {
                    b.Navigation("DetallesTurno");
                });
#pragma warning restore 612, 618
        }
    }
}
